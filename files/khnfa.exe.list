EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
khnfa.exe -- emu8086 assembler version: 4.08  
 
[ 12/15/2021  --  5:10:20 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       ;org 100h
[   3]        :                                       
[   4]        :                                       data segment
[   5]    0000: 01                                    msg db arr
[   6]    0001: 24 24 24 24 24 24 24 24 24 24 24 24   arr db 100 dup('$')
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24                         
[   7]        :                                       ends
[   8]        :                                       stack segment
[   9]    0070: 00 00 00 00 00 00 00 00 00 00 00 00   dw 128 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  10]        :                                       ends
[  11]        :                                       
[  12]        :                                       .code
[  13]    0170:                                       main proc far
[  14]    0170: B8 00 00                              mov ax ,@data
[  15]    0173: 8E D8                                 mov ds ,ax
[  16]        :                                       ;------------------
[  17]    0175: B4 0A                                 mov ah,10
[  18]    0177: BA 01 00                              lea dx ,arr
[  19]    017A: C6 06 01 00 50                        mov arr,80
[  20]    017F: CD 21                                 int 21h
[  21]        :                                       ;------clear screen ------------
[  22]    0181: B4 06                                 mov ah,6
[  23]    0183: B0 00                                 mov al,0
[  24]    0185: B1 00                                 mov cl ,0
[  25]    0187: B5 00                                 mov ch,0
[  26]    0189: B2 4F                                 mov dl,4fh
[  27]    018B: B6 18                                 mov dh ,18h
[  28]    018D: B7 02                                 mov bh ,2
[  29]    018F: CD 10                                 int 10h
[  30]        :                                       
[  31]        :                                       
[  32]        :                                       ;---------center screean output---------
[  33]    0191: B4 02                                 mov ah,2
[  34]    0193: B7 00                                 mov bh,0
[  35]    0195: B2 27                                 mov dl,27h;mid-point of colums
[  36]    0197: B6 0C                                 mov dh,0ch;mid-poin of rows
[  37]    0199: CD 10                                 int 10h
[  38]        :                                       ;------------------
[  39]        :                                       
[  40]        :                                       
[  41]        :                                       
[  42]        :                                       ;LEA dx ,msg
[  43]        :                                       ; mov ah ,09h
[  44]        :                                       ;int 21h
[  45]        :                                       
[  46]        :                                       
[  47]    019B: BA 03 00                              LEA dx ,arr+2
[  48]    019E: B4 09                                 mov ah ,09h
[  49]    01A0: CD 21                                 int 21h
[  50]        :                                       
[  51]        :                                       
[  52]        :                                       end main
[  53]        :                                       
[  54]        :                                       
[  55]        :                                       ret
[  56]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: A2      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 07      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 75      -   check sum (l.byte)
0013: 85      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 17      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 17      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
